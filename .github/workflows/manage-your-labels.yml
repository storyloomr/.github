name: Manage Organization Labels

on:
    schedule:
        # Run daily at 3 AM UTC to sync labels across all repositories
        - cron: "0 3 * * *"
    workflow_dispatch:
        # Allow manual triggering of the workflow
        inputs:
            dry_run:
                description: "Run in dry-run mode (list current labels without making changes)"
                required: false
                default: false
                type: boolean

permissions:
    contents: read
    issues: write

jobs:
    sync-labels:
        name: Sync Labels Across Organization
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Validate BOT_TOKEN secret
              env:
                  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
              run: |
                  if [ -z "$BOT_TOKEN" ]; then
                    echo "‚ùå BOT_TOKEN secret is not set. Please configure it in repository secrets."
                    echo "Required scopes: repo, admin:org (write)"
                    exit 1
                  fi
                  echo "‚úÖ BOT_TOKEN secret is configured"

            - name: Dry-run - List current labels from sample repository
              env:
                  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
              run: |
                  echo "üîç Fetching current labels from storyloomr-svc-content (sample repo):"
                  gh api repos/storyloomr/storyloomr-svc-content/labels \
                    -H "Authorization: token $BOT_TOKEN" \
                    --jq '.[].name' | head -10 || {
                      echo "‚ö†Ô∏è  Could not fetch labels. Check repository access and token permissions."
                      exit 0
                    }

            - name: Install dependencies
              if: ${{ github.event.inputs.dry_run != 'true' }}
              run: |
                  python3 -m pip install --upgrade pip
                  python3 -m pip install PyYAML requests

            - name: Sync labels across all repositories
              if: ${{ github.event.inputs.dry_run != 'true' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
              run: |
                  python3 << 'EOF'
                  import yaml
                  import requests
                  import json
                  import os

                  # Load configuration
                  with open('manage-your-labels.yml', 'r') as f:
                      config = yaml.safe_load(f)

                  token = os.environ['GITHUB_TOKEN']
                  headers = {
                      'Authorization': 'token ' + token,
                      'Accept': 'application/vnd.github.v3+json'
                  }

                  print("üîÑ Starting label sync across repositories...")

                  for repo in config['repositories']:
                      repo_name = "storyloomr/" + repo
                      print("\nüìÅ Processing repository: " + repo_name)
                      
                      # Get existing labels
                      existing_response = requests.get(
                          "https://api.github.com/repos/" + repo_name + "/labels",
                          headers=headers
                      )
                      
                      if existing_response.status_code != 200:
                          print("‚ùå Failed to fetch labels for " + repo_name + ": " + str(existing_response.status_code))
                          continue
                      
                      existing_labels = {label['name']: label for label in existing_response.json()}
                      
                      # Sync each label
                      for label_config in config['labels']:
                          label_name = label_config['name']
                          label_data = {
                              'name': label_name,
                              'description': label_config['description'],
                              'color': label_config['color']
                          }
                          
                          if label_name in existing_labels:
                              # Update existing label
                              response = requests.patch(
                                  "https://api.github.com/repos/" + repo_name + "/labels/" + label_name,
                                  headers=headers,
                                  json=label_data
                              )  
                              if response.status_code == 200:
                                  print("  ‚úÖ Updated: " + label_name)
                              else:
                                  print("  ‚ùå Failed to update " + label_name + ": " + str(response.status_code))
                          else:
                              # Create new label
                              response = requests.post(
                                  "https://api.github.com/repos/" + repo_name + "/labels",
                                  headers=headers,
                                  json=label_data
                              )
                              if response.status_code == 201:
                                  print("  ‚úÖ Created: " + label_name)
                              else:
                                  print("  ‚ùå Failed to create " + label_name + ": " + str(response.status_code))

                  print("\nüéâ Label sync completed!")
                  EOF

            - name: Install dependencies (dry run)
              if: ${{ github.event.inputs.dry_run == 'true' }}
              run: |
                  python3 -m pip install --upgrade pip
                  python3 -m pip install PyYAML requests

            - name: Dry run - Preview label sync
              if: ${{ github.event.inputs.dry_run == 'true' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
              run: |
                  python3 << 'EOF'
                  import yaml
                  import requests
                  import json
                  import os

                  # Load configuration
                  with open('manage-your-labels.yml', 'r') as f:
                      config = yaml.safe_load(f)

                  token = os.environ['GITHUB_TOKEN']
                  headers = {
                      'Authorization': 'token ' + token,
                      'Accept': 'application/vnd.github.v3+json'
                  }

                  print("üîç DRY RUN: Preview of label sync across repositories...")
                  print("üìä Total repositories to sync: " + str(len(config['repositories'])))
                  print("üìä Total labels to sync: " + str(len(config['labels'])))

                  for repo in config['repositories']:
                      repo_name = "storyloomr/" + repo
                      print("\nüìÅ Repository: " + repo_name)
                      
                      # Get existing labels
                      existing_response = requests.get(
                          "https://api.github.com/repos/" + repo_name + "/labels",
                          headers=headers
                      )
                      
                      if existing_response.status_code != 200:
                          print("‚ùå Cannot access " + repo_name + ": " + str(existing_response.status_code))
                          continue
                      
                      existing_labels = {label['name']: label for label in existing_response.json()}
                      
                      # Preview changes
                      for label_config in config['labels']:
                          label_name = label_config['name']
                          
                          if label_name in existing_labels:
                              existing = existing_labels[label_name]
                              changes = []
                              if existing['description'] != label_config['description']:
                                  changes.append("description: '" + existing['description'] + "' ‚Üí '" + label_config['description'] + "'")
                              if existing['color'] != label_config['color']:
                                  changes.append("color: #" + existing['color'] + " ‚Üí #" + label_config['color'])
                              
                              if changes:
                                  print("  üîÑ UPDATE " + label_name + ": " + ', '.join(changes))
                              else:
                                  print("  ‚úÖ OK " + label_name)
                          else:
                              print("  ‚ûï CREATE " + label_name + ": " + label_config['description'] + " (#" + label_config['color'] + ")")

                  print("\nüéØ DRY RUN completed - no changes made!")
                  EOF

            - name: Post-sync validation
              if: ${{ github.event.inputs.dry_run != 'true' }}
              env:
                  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
              run: |
                  echo "‚úÖ Label sync completed successfully"
                  echo "üîç Verifying labels on sample repository:"
                  gh api repos/storyloomr/storyloomr-svc-content/labels \
                    -H "Authorization: token $BOT_TOKEN" \
                    --jq '.[] | select(.name | startswith("type:")) | .name' || true
